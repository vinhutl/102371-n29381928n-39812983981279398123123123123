   body {
      background-color: var(--background-color);
      background-image: var(--background-image);
      background-size: cover;
      background-position: center;
      color: var(--text-color);
      transition: background-color 0.3s, color 0.3s, background-image 0.3s;
    }

    .stars {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: transparent;
      overflow: hidden;
      pointer-events: none; /* Ensure stars don't block clicks */
    }

    .star {
      position: absolute;
      background: white;
      border-radius: 50%;
      will-change: transform;
    }

    .nav-link {
      transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
    }

    .nav-link:hover {
      opacity: 0.8;
      transform: scale(1.05);
    }

    .glow-text {
      text-shadow: 0 0 10px rgba(255, 255, 255, 0.5), 0 0 20px rgba(255, 255, 255, 0.3), 0 0 30px rgba(255, 255, 255, 0.2);
    }

    .custom-input {
      width: 100%;
      padding: 20px;
      font-size: 16px;
      border-radius: 15px;
      border: 2px solid var(--input-border);
      background-color: var(--input-bg);
      color: var(--text-color);
      transition: border-color 0.3s ease;
    }

    .custom-input:focus {
      border-color: var(--primary-color);
      outline: none;
    }

    .theme-button {
      background-color: var(--primary-color);
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .theme-button:hover {
      opacity: 0.8;
    }

.circular-button {
  background-color: var(--primary-color);
  color: white;
  border: 2px solid white; /* Add a white border */
  padding: 10px;
  border-radius: 50%; /* Make the button circular */
  cursor: pointer;
  transition: background-color 0.3s ease-in-out, transform 0.3s ease-in-out, border-color 0.3s ease-in-out; /* Add border-color to transition */
  width: 60px; /* Set a fixed width */
  height: 60px; /* Set a fixed height */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
}

.circular-button:hover {
  background-color: rgba(var(--primary-color), 0.8); /* Slightly transparent on hover */
  transform: scale(1.1); /* Slightly enlarge on hover */
}

    .circular-button img {
      border-radius: 50%;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }


    #customThemeModal {
      z-index: 1000;
    }

    #customThemeModal .modal-content {
      position: relative;
      z-index: 1001;
    }

    .tab-button {
      background-color: transparent; /* Make the background transparent */
      color: white; /* Keep the text color visible */
      border: none; /* Remove any border */
      padding: 10px 20px;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease, color 0.3s ease;
      margin: 5px;
      position: relative;
      display: block;
      width: 100%;
      text-align: left;
    }

    .tab-button:hover {
      opacity: 0.8; /* Optional: add a slight hover effect */
    }

    .tab-button.active {
      background-color: transparent; /* Ensure active button is also transparent */
      color: white; /* Keep text color for the active state */
    }

    /* New styles for the transparent box and barrier */
    .content-container {
      background-color: rgba(17, 24, 39, 0.8); /* 0.8 transparency */
      border-radius: 15px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      display: flex;
      width: 90%; /* Reduced width */
      max-width: 800px; /* Adjusted max-width */
      margin: 0 auto; /* Center the box */
      position: relative; /* Ensure it's above other elements */
      z-index: 10; /* Ensure it's above the stars */
      height: 600px; /* Fixed height for the settings box */
    }

    .sidebar {
      width: 25%;
      background-color: rgba(17, 24, 39, 0.8); /* Changed to match content container */
      padding: 1rem;
      border-right: 2px solid rgba(255, 255, 255, 0.1); /* Barrier */
      position: relative;
      display: flex;
      flex-direction: column;
    }

    .sidebar-header {
      text-align: center;
      margin-bottom: 2rem;
      padding-bottom: 1rem;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .main-content {
      width: 75%;
      padding: 1rem;
      max-height: 70vh; /* Set a maximum height for the content area */
      overflow-y: auto; /* Enable vertical scrolling */
    }

    .sidebar ul {
      padding-left: 0;
      list-style-type: none;
      margin: 0;
    }

    .sidebar li {
      margin-bottom: 1rem;
      position: relative;
    }

    /* Active Tab Indicator - Updated */
    .tab-indicator {
      position: absolute;
      left: 0;
      top: 0;
      width: 4px;
      height: 0; /* Start with 0 height for animation */
      background-color: var(--primary-color); /* Use primary color variable instead of hardcoded color */
      border-radius: 0 4px 4px 0;
      opacity: 0;
      transition: opacity 0.3s ease, height 0.3s ease; /* Add height to transition */
    }

    .tab-button.active .tab-indicator {
      opacity: 1;
      height: 100%; /* Expand to full height when active */
      animation: slideDown 0.3s ease-out; /* Add slide animation */
    }

    /* Add keyframes for the slide animation */
    @keyframes slideDown {
      0% {
        height: 0;
        top: 0;
      }
      100% {
        height: 100%;
        top: 0;
      }
    }

    /* Adjust tab button to accommodate the indicator */
    .tab-button {
      padding-left: 15px; /* Add some space on the left for the indicator */
      position: relative;
      overflow: hidden; /* Ensure the animation stays within the button */
    }
    
/* Add sliding animation for tab content */
.tab-content {
  display: none;
  opacity: 0;
  transform: translateX(-20px); /* Start slightly to the left */
  transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out; /* Slower transition */
}

.tab-content.active {
  display: block;
  opacity: 1;
  transform: translateX(0); /* Slide into place */
}